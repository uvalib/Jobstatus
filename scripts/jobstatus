# source this file in bash scripts for easy jobstatus integration

# Jason Jordan <jlj5aj@virginia.edu>

# Usage:
#
# 0. (optional) Create a jobstatus-secrets file in the same directory
#    as this file, to hold hostname / password info.  If not present,
#    you will have to supply these values according to step 2 below.
# 
# 1. Call the appropriate init function to set some sane defaults:
#      * jobstatus_init_dev / jobstatus_init_prod
#
# 2. (optional) Tweak defaults as needed:
#      * jobstatus_use_host <host> -- specify alternate host or host:port
#      * jobstatus_use_password <password> -- specify alternate password
#
# 3. Set job status fields:
#      * jobstatus_set_name <name> -- your name for the job
#      * jobstatus_set_duration <duration> -- how long the job took, in seconds
#      * jobstatus_set_frequency <frequency> -- how often the job runs, in hours
#      * jobstatus_set_message <message> -- free-form message for this instance of the job
#      * jobstatus_set_status_success / jobstatus_set_status_failed -- final status of job
#
# 4. Post the results to the job status server:
#      * jobstatus_post

###############################################################################

# Grab default hostnames / passwords, if available.

# The values you can set are:

JOBSTATUS_DEV_HOST=""
JOBSTATUS_DEV_PASSWORD=""
JOBSTATUS_PROD_HOST=""
JOBSTATUS_PROD_PASSWORD=""

JOBSTATUS_SECRETS="$(dirname "$BASH_SOURCE")/jobstatus-secrets"
[ -f "$JOBSTATUS_SECRETS" ] && . "$JOBSTATUS_SECRETS"

# global variables:

JOBSTATUS_HOST=""
JOBSTATUS_PASSWORD=""
JOBSTATUS_FORMAT=""
JOBSTATUS_NAME=""
JOBSTATUS_STATUS=""
JOBSTATUS_DURATION=""
JOBSTATUS_FREQUENCY=""
JOBSTATUS_MESSAGE=""

# helper functions:

function jobstatus_set_defaults ()
{
	jobstatus_set_name ""
	jobstatus_set_duration ""
	jobstatus_set_frequency ""
	jobstatus_set_message ""
	jobstatus_set_status_success
}

function jobstatus_init_prod ()
{
	jobstatus_use_host "$JOBSTATUS_PROD_HOST"
	jobstatus_use_password "$JOBSTATUS_PROD_PASSWORD"

	jobstatus_set_defaults
}

function jobstatus_init_dev ()
{
	jobstatus_use_host "$JOBSTATUS_DEV_HOST"
	jobstatus_use_password "$JOBSTATUS_DEV_PASSWORD"

	jobstatus_set_defaults
}

function jobstatus_use_host ()
{
	local host="$1"

	JOBSTATUS_HOST="$host"
}

function jobstatus_use_password ()
{
	local password="$1"

	JOBSTATUS_PASSWORD="$password"
}

function jobstatus_set_name ()
{
	local name="$1"

	JOBSTATUS_NAME="$name"
}

function jobstatus_set_duration ()
{
	local duration="$1"

	JOBSTATUS_DURATION="$duration"
}

function jobstatus_set_frequency ()
{
	local frequency="$1"

	JOBSTATUS_FREQUENCY="$frequency"
}

function jobstatus_set_message ()
{
	local message="$1"

	# jobstatus doesn't seem to like multi-line messages
	message="$(echo "$message" | tr '\n' ' ')"

	JOBSTATUS_MESSAGE="$message"
}

function jobstatus_set_status ()
{
	# should not be called directly unless necessary
	# (for example, if a new status is created)

	local status="$1"

	JOBSTATUS_STATUS="$status"
}

function jobstatus_set_status_success ()
{
	jobstatus_set_status "success"
}

function jobstatus_set_status_failed ()
{
	jobstatus_set_status "failed"
}

function jobstatus_post ()
{
	# validate mandatory fields

	[ "$JOBSTATUS_HOST" = "" ] && echo "jobstatus: error: missing host" && return 2
	[ "$JOBSTATUS_NAME" = "" ] && echo "jobstatus: error: missing name" && return 3
	[ "$JOBSTATUS_STATUS" = "" ] && echo "jobstatus: error: missing status" && return 4
	[ "$JOBSTATUS_DURATION" = "" ] && echo "jobstatus: error: missing duration" && return 5

	local url="https://${JOBSTATUS_HOST}/api"
	local format="application/json"

	local request="$(printf "{\"name\":\"%s\", \"status\":\"%s\", \"duration\":\"%s\", \"frequency\":\"%s\", \"message\":\"%s\"}" \
		"$JOBSTATUS_NAME" "$JOBSTATUS_STATUS" "$JOBSTATUS_DURATION" "$JOBSTATUS_FREQUENCY" "$JOBSTATUS_MESSAGE")"

	local response="$(curl -s -H "Content-Type:${format}" -H "Accept:${format}" -H "X-Password:${JOBSTATUS_PASSWORD}" "$url" -d "$request")"

	local retcode="$?"

	echo "$response"

	return $retcode
}

# vim:ft=sh
